/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/java_library_plugin.html
 */

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'

    // Apply the plugins to add support for Spring Boot
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.3'

    // Apply the plugin to add support for jacoco test coverage report
    id 'jacoco'

    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

configurations.all {
  resolutionStrategy.eachDependency { DependencyResolveDetails details ->
    if (details.requested.group == 'org.apache.logging.log4j') {
      details.useVersion '2.16.0'
    }
  }
}

group 'org.ga4gh'
version '0.5.9'

repositories {
    mavenCentral()
    mavenLocal()
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-to-slf4j:2.24.3'
    implementation 'com.google.guava:guava:28.1-jre'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.18.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.18.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.3'
    implementation 'org.hibernate:hibernate-core:6.3.1.Final'
    implementation 'org.springframework:spring-orm:6.2.3'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.2.0'
    implementation 'org.xerial:sqlite-jdbc:3.49.1.0'

    testImplementation 'org.testng:testng:7.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
    testImplementation 'org.springframework.security:spring-security-test'
}

jar {
    enabled = true
}

bootJar {
    mainClass = 'org.ga4gh.starterkit.common.demo.DemoServer'
}

test {
    // Use TestNG for unit tests
    useTestNG()

    testLogging {
        exceptionFormat = 'full'
    }
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
  archiveClassifier = "sources"
}

publishing {
  publications {
    myPublication(MavenPublication) {
      from components.java
      // artifact sourceJar
      pom {
        name = "ga4gh-starter-kit-common"
        description = "Common utils library for GA4GH Starter Kit web services"
        url = "https://github.com/ga4gh/ga4gh-starter-kit-common"
        licenses {
          license {
            name = "The Apache License, Version 2.0"
            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
          }
        }
        developers {
          developer {
            id = "jb-adams"
            name = "Jeremy Adams"
            email = "jeremy.adams@ga4gh.org"
          }
        }
        scm {
          connection = "scm:https://github.com/ga4gh/ga4gh-starter-kit-common.git"
          developerConnection = "scm:git://github.com/ga4gh/ga4gh-starter-kit-common.git"
          url = "https://github.com/ga4gh/ga4gh-starter-kit-common"
        }
      }
    }
  }
}

signing {
    sign publishing.publications.myPublication
}

nexusPublishing {
    packageGroup = "org.ga4gh"
    repositories {
        sonatype()
    }
}